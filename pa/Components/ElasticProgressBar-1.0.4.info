{"Name":"Elastic Progress Bar","Id":2336,"Alias":"ElasticProgressBar","Description":"\n**Elastic Progress Bar** is a loading view that displays progress \nusing a cool, springy animation on Android 3.0+.\n\n## Usage\n\nThe `ElasticDownloadView` can be added to a layout file:\n\n    \u003cit.michelelacorte.elasticprogressbar.ElasticDownloadView\n        android:id=\"@+id/elastic\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_centerInParent=\"true\" /\u003e\n\nAnd then in the code, we can control the progress:\n\n    var elastic = FindViewById\u003cElasticDownloadView\u003e (Resource.id.elastic);\n    \n    // initiate the intro animation\n    elastic.StartIntro ();\n    \n    // set the progress percentage\n    elastic.Progress = 10;\n    \n    // set the progress to complete\n    elastic.Success ();\n    \n    // the progress can also fail\n    elastic.Fail ();\n\n### Customization\n\nThe `OptionView` type has several members that can be used to control the \nappearance of the progress bar and background view. The properties must be set \nbefore the view is inflated, or constructed:\n\n - **BackgroundColorSquare** \n - **ColorCloud** \n - **ColorFail**  \n - **ColorSuccess**  \n - **ColorProgressBar**  \n - **ColorProgressBarInProgress**  \n - **ColorProgressBarText** \n - **NoBackground** \n - **NoIntro** \n\nTo prevent a customization from being used, the value can be reset, or \nswitched off: \n\n - IsBackgroundColorSquareSet\n - IsColorCloudSet\n - IsColorFailSet\n - IsColorSuccessSet\n - IsColorProgressBarSet\n - IsColorProgressBarInProgressSet\n - IsColorProgressBarTextSet\n\nYou can set color background with (default is `colorPrimary`), make sure to \ncall this before `SetContentView()` of your activity:\n\n    OptionView.BackgroundColorSquare = Color.Green;\n\nTo have no background, set the `NoBackground` property to true. Make sure to\ndo this without first `BackgroundColorSquare`. `BackgroundColorSquare` takes \npriority over NoBackground:\n\n    OptionView.NoBackground = true;\n","Version":"1.0.4","Summary":"An elastic loading bar.","QuickStart":"\n**Elastic Progress Bar** is a loading view that displays progress \nusing a cool, springy animation on Android 3.0+.\n\n## Usage\n\nThe `ElasticDownloadView` can be added to a layout file:\n\n    \u003cit.michelelacorte.elasticprogressbar.ElasticDownloadView\n        android:id=\"@+id/elastic\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_centerInParent=\"true\" /\u003e\n\nAnd then in the code, we can control the progress:\n\n    var elastic = FindViewById\u003cElasticDownloadView\u003e (Resource.id.elastic);\n    \n    // initiate the intro animation\n    elastic.StartIntro ();\n    \n    // set the progress percentage\n    elastic.Progress = 10;\n    \n    // set the progress to complete\n    elastic.Success ();\n    \n    // the progress can also fail\n    elastic.Fail ();\n\n### Customization\n\nThe `OptionView` type has several members that can be used to control the \nappearance of the progress bar and background view. The properties must be set \nbefore the view is inflated, or constructed:\n\n - **BackgroundColorSquare** \n - **ColorCloud** \n - **ColorFail**  \n - **ColorSuccess**  \n - **ColorProgressBar**  \n - **ColorProgressBarInProgress**  \n - **ColorProgressBarText** \n - **NoBackground** \n - **NoIntro** \n\nTo prevent a customization from being used, the value can be reset, or \nswitched off: \n\n - IsBackgroundColorSquareSet\n - IsColorCloudSet\n - IsColorFailSet\n - IsColorSuccessSet\n - IsColorProgressBarSet\n - IsColorProgressBarInProgressSet\n - IsColorProgressBarTextSet\n\nYou can set color background with (default is `colorPrimary`), make sure to \ncall this before `SetContentView()` of your activity:\n\n    OptionView.BackgroundColorSquare = Color.Green;\n\nTo have no background, set the `NoBackground` property to true. Make sure to\ndo this without first `BackgroundColorSquare`. `BackgroundColorSquare` takes \npriority over NoBackground:\n\n    OptionView.NoBackground = true;\n","Hash":"8cf4f32a2eb33443cc9138af1fa275c2","TargetPlatforms":["android"],"TrialHash":null}